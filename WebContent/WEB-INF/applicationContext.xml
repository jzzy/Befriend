<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdaptor">
		</property>
	</bean>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		
		<!--本地 autoReconnect=true&amp;以防8小时无连接错误  useUnicode=true&amp;characterEncoding=utf8设置编码为 utf8
		--><property name="jdbcUrl" value="jdbc:mysql://localhost:3306/befriend?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8" />
		 
		<!-- 正式服
		<property name="jdbcUrl" value="jdbc:mysql://182.92.100.235:3306/befriend?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8" />
		 -->
		<!-- 测试服 
		<property name="jdbcUrl" value="jdbc:mysql://123.56.45.164:3306/befriend?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8" />
		-->
		<property name="user" value="root" />
		<property name="password" value="admin" />
		<!-- 连接池中保留的最小连接数，默认为：3-->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="30" />
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->
		<property name="initialPoolSize" value="10" />
		<!--最大空闲时间，120秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
		<property name="maxIdleTime" value="120" />
		<!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 --> 
		<property name="checkoutTimeout" value="3000"/>
		<!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->
		<property name="idleConnectionTestPeriod" value="60" />
	</bean>	

	
	

	<bean id="hibernateJpaVendorAdaptor"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL"></property>
		<property name="showSql" value="false"></property>
	</bean>
	<!-- 事务管理器配置, Hibernate单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory">
		</property>
	</bean>
	<!-- 使用annotation定义事务 
	"proxy-target-class" 属值被设置为 "true"，那么基于类的代理将起作用
	proxy-target-class" 属值被设置为 "false"，那么基于接口的代理将起作用
	-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false" />
	
	
	
	
	
	<!-- 用户dao -->
	<bean id="userDAO" class="com.befriend.dao.impl.UserDAOImpl"></bean>
	<!-- 超级管理员dao -->
	<bean id="superadminDAO" class="com.befriend.dao.impl.SuperAdminDAOImpl"></bean>
	<!-- App更新 以及工具类dao -->
	<bean id="appupDAO" class="com.befriend.dao.impl.ApputilDAOImpl"></bean>
	<!-- DAO start here -->
	<!-- 新闻dao -->
	<bean id="newsDAO" class="com.befriend.dao.impl.NewsDAOImpl"></bean>
	<!-- DAO start here -->
	<!-- 新闻收藏dao -->
	<bean id="collectDAO" class="com.befriend.dao.impl.CollectDAOImpl"></bean>
	<!-- 新闻评论dao -->
	<bean id="reviewDAO" class="com.befriend.dao.impl.ReviewDAOImpl"></bean>
	<!--appdao -->
	<bean id="appDAO" class="com.befriend.dao.impl.AppDAOImpl"></bean>
	<!--论坛dao -->
	<bean id="forumDAO" class="com.befriend.dao.impl.ForumDAOImpl"></bean>
	<!--论坛收藏dao -->
	<bean id="follectDAO" class="com.befriend.dao.impl.FollectDAOImpl"></bean>
	<!-- 群聊dao -->
	<bean id="groupDAO" class="com.befriend.dao.impl.GroupDAOImpl"></bean>
	<!-- 统计用户注册数量dao -->
	<bean id="registrationDAO" class="com.befriend.dao.impl.RegistrationDAOImpl"></bean>
	
	<bean id="eduServicesDAO" class="com.befriend.dao.impl.EduServicesDAOImpl"></bean>
	<bean id="eduCommentDAO" class="com.befriend.dao.impl.EduCommentDAOImpl"></bean>

	<!-- Action start here -->
	
	
	<!-- 超级管理员-->
	<bean id="superadminAction" class="com.befriend.action.SuperAdminAction"
		scope="prototype">
		<constructor-arg ref="superadminDAO"></constructor-arg>
	</bean>
	
	<!-- 论坛 -->
	<bean id="forumAction" class="com.befriend.action.ForumAction"
		scope="prototype">
		<constructor-arg ref="forumDAO"></constructor-arg>
		<constructor-arg ref="userDAO"></constructor-arg>
		<constructor-arg ref="follectDAO"></constructor-arg>
		
	</bean>
	
	<!-- 用户 -->
	<bean id="userAction" class="com.befriend.action.UserAction"
		scope="prototype">
		<constructor-arg ref="userDAO"></constructor-arg>
			<constructor-arg ref="registrationDAO"></constructor-arg>
			<constructor-arg ref="groupDAO"></constructor-arg>
		<constructor-arg ref="appupDAO"></constructor-arg>
	</bean>
	
	<!-- app更新 -->
	<bean id="appupAction" class="com.befriend.action.ApputilAction"
		scope="prototype">
		<constructor-arg ref="appupDAO"></constructor-arg>
		<constructor-arg ref="appDAO"></constructor-arg>
		<constructor-arg ref="userDAO"></constructor-arg>

	</bean>
	
	<!-- 新闻 -->
	<bean id="newsAction" class="com.befriend.action.NewsAction"
		scope="prototype">
		<constructor-arg ref="newsDAO"></constructor-arg>
		<constructor-arg ref="collectDAO"></constructor-arg>
		<constructor-arg ref="reviewDAO"></constructor-arg>
		<constructor-arg ref="userDAO"></constructor-arg>
	</bean>
	
	<!-- 群聊 -->
	<bean id="groupAction" class="com.befriend.action.GroupAction"
		scope="prototype">
		<constructor-arg ref="groupDAO"></constructor-arg>
		<constructor-arg ref="userDAO"></constructor-arg>
		
	</bean>
	<!-- 微信接口开发 -->
	<bean id="wechatAction" class="com.befriend.action.WechatAction"
		scope="prototype">
		
		
		
	</bean>
	
	<bean id="eduAction" class="com.befriend.action.EduServicesAction" scope="prototype">
	    <constructor-arg ref="eduServicesDAO"></constructor-arg>
	       <constructor-arg ref="appupDAO"></constructor-arg>
	    
	</bean>
	<bean id="eduCommentAction" class="com.befriend.action.EduCommentAction" scope="prototype">
		<constructor-arg ref="eduCommentDAO"></constructor-arg>
		<constructor-arg ref="eduServicesDAO"></constructor-arg>
		<constructor-arg ref="userDAO"></constructor-arg>
		<constructor-arg ref="newsDAO"></constructor-arg>
		<constructor-arg ref="collectDAO"></constructor-arg>
		<constructor-arg ref="forumDAO"></constructor-arg>
		<constructor-arg ref="follectDAO"></constructor-arg>
		
	</bean>
	
	<bean id="uploadAction" class="com.befriend.action.UploadAction" scope="prototype"></bean>
	
	<!-- 在java普通类中调用 dao-->
	<bean id="app" class="com.befriend.util.ApplicationUtil">
	</bean>
	

	

</beans>
